# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω—É–∂–Ω—ã–µ –∫–ª–∞—Å—Å—ã –∏ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ telegram
from telegram import (
    Update,                     # –°–æ–¥–µ—Ä–∂–∏—Ç –≤—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ/–∫–æ–º–∞–Ω–¥—É –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    ReplyKeyboardMarkup,        # –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ã—á–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫ (–≤–Ω–∏–∑—É —á–∞—Ç–∞)
    KeyboardButton,             # –ö–∞–∂–¥–∞—è –æ—Ç–¥–µ–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞
    InlineKeyboardMarkup,       # –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–æ–∫ –≤–Ω—É—Ç—Ä–∏ —Å–æ–æ–±—â–µ–Ω–∏—è (inline)
    InlineKeyboardButton,       # –ö–∞–∂–¥–∞—è –æ—Ç–¥–µ–ª—å–Ω–∞—è inline-–∫–Ω–æ–ø–∫–∞
    InputMediaPhoto             # –î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—è–º–∏
)

# –ò–º–ø–æ—Ä—Ç –∏–∑ telegram.ext ‚Äî —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –¥–ª—è –ª–æ–≥–∏–∫–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º
from telegram.ext import (
    Application,                # –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å, –∑–∞–ø—É—Å–∫–∞—é—â–∏–π –±–æ—Ç–∞
    CommandHandler,             # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥, –Ω–∞–ø—Ä–∏–º–µ—Ä: /start
    MessageHandler,             # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    CallbackQueryHandler,       # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ inline-–∫–Ω–æ–ø–∫–∏
    filters,                    # –ù–∞–±–æ—Ä —Ñ–∏–ª—å—Ç—Ä–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ç–µ–∫—Å—Ç –±–µ–∑ –∫–æ–º–∞–Ω–¥)
    ContextTypes                # –¢–∏–ø –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ ‚Äî —Å—é–¥–∞ –º–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å user_data
)

# –ò–º–ø–æ—Ä—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
from random import shuffle, randint  # –î–ª—è —Å–ª—É—á–∞–π–Ω—ã—Ö —à—É—Ç–æ–∫ –∏ —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª

# === –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ –° –ö–ù–û–ü–ö–ê–ú–ò ===
# ReplyKeyboardMarkup ‚Äî —Å–æ–∑–¥–∞—ë—Ç –∫–Ω–æ–ø–∫–∏ –≤–Ω–∏–∑—É —á–∞—Ç–∞
main_menu = ReplyKeyboardMarkup([
    [KeyboardButton("üëã –ü—Ä–∏–≤–µ—Ç"), KeyboardButton("üòÇ –®—É—Ç–∫–∞")],
    [KeyboardButton("üé¨ –§–∏–ª—å–º—ã"), KeyboardButton("üéÆ –ò–≥—Ä–∞")],
    [KeyboardButton("üìä –í–∏–∫—Ç–æ—Ä–∏–Ω–∞"), KeyboardButton("üì∑ –ú–µ–º")],
    [KeyboardButton("ü§î –ö–∞–∫ –¥–µ–ª–∞?"), KeyboardButton("üôã –ß—Ç–æ –¥–µ–ª–∞–µ—à—å?")],
    [KeyboardButton("üëã –ü–æ–∫–∞")]
], resize_keyboard=True)  # resize_keyboard=True –¥–µ–ª–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ –∫–æ–º–ø–∞–∫—Ç–Ω–µ–µ

# –®—É—Ç–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞
jokes = ['–ö–æ–ª–æ–±–æ–∫ –ø–æ–≤–µ—Å–∏–ª—Å—è üòÇ', '–†—É—Å–∞–ª–∫–∞ —Å–µ–ª–∞ –Ω–∞ —à–ø–∞–≥–∞—Ç üßú‚Äç‚ôÄÔ∏è', '–†—ã–±–∞ —É—Ç–æ–Ω—É–ª–∞ üêüüí¶']

# –°—Å—ã–ª–∫–∞ –Ω–∞ –º–µ–º-–∫–∞—Ä—Ç–∏–Ω–∫—É
meme_url = "https://i.imgur.com/OuKDd6T.jpeg"  # –ú–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –ª—é–±–æ–π –¥—Ä—É–≥–æ–π URL —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º

# –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã
quiz_question = "–°–∫–æ–ª—å–∫–æ –±—É–¥–µ—Ç 2 + 2?"  # –¢–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞
quiz_answers = [  # Inline –∫–Ω–æ–ø–∫–∏-–æ—Ç–≤–µ—Ç—ã
    InlineKeyboardButton("4 ‚úÖ", callback_data="quiz_right"),
    InlineKeyboardButton("5 ‚ùå", callback_data="quiz_wrong"),
    InlineKeyboardButton("22 ü§°", callback_data="quiz_wrong")
]

# === –û–ë–†–ê–ë–û–¢–ß–ò–ö –ö–û–ú–ê–ù–î–´ /start ===
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≥–ª–∞–≤–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏
    await update.message.reply_text(
        "–ó–¥–∞—Ä–æ–≤–∞, —è –≤–µ—Å–µ–ª—ã–π –±–æ—Ç –û–õ–ï–ì ü§ñ\n–ñ–º–∏ –∫–Ω–æ–ø–∫–∏, –ø–∏—à–∏ —á—Ç–æ —Ö–æ—á–µ—à—å!",
        reply_markup=main_menu
    )
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ user_data —Å—á—ë—Ç—á–∏–∫ –ø–æ–±–µ–¥ –≤ –∏–≥—Ä–µ, –µ—Å–ª–∏ –æ–Ω –µ—â—ë –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
    context.user_data.setdefault("wins", 0)

# === –ì–õ–ê–í–ù–´–ô –û–ë–†–ê–ë–û–¢–ß–ò–ö –í–°–ï–• –°–û–û–ë–©–ï–ù–ò–ô ===
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    request = update.message.text.lower()  # –ü—Ä–∏–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É

    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    if "–ø—Ä–∏–≤–µ—Ç" in request:
        await update.message.reply_text("–í–µ—á–µ—Ä –≤ —Ö–∞—Ç—É! üß¢")

    # –û—Ç–≤–µ—Ç –Ω–∞ "–∫–∞–∫ –¥–µ–ª–∞"
    elif "–∫–∞–∫ –¥–µ–ª–∞" in request:
        await update.message.reply_text("–£ –º–µ–Ω—è –≤—Å—ë –ø–æ –∫–∞–π—Ñ—É! –ê —É —Ç–µ–±—è? üî•")

    # –û—Ç–≤–µ—Ç –Ω–∞ "—á—Ç–æ –¥–µ–ª–∞–µ—à—å"
    elif "—á—Ç–æ –¥–µ–ª–∞–µ—à—å" in request:
        await update.message.reply_text("–î–∞ –Ω–∏—á–µ, –ø—Ä–æ—Å—Ç–æ –∂–∏–≤—É, –∫–∞–∫ –∏ —Ç—ã üßò")

    # –°–ª—É—á–∞–π–Ω–∞—è —à—É—Ç–∫–∞
    elif "—à—É—Ç–∫–∞" in request:
        shuffle(jokes)  # –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º —à—É—Ç–∫–∏
        await update.message.reply_text(jokes[0])  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–≤—É—é –∏–∑ –ø–µ—Ä–µ–º–µ—à–∞–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞

    # –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –∂–∞–Ω—Ä–∞ —Ñ–∏–ª—å–º–∞
    elif "—Ñ–∏–ª—å–º—ã" in request:
        genre_menu = ReplyKeyboardMarkup([
            [KeyboardButton("üß® –ë–æ–µ–≤–∏–∫"), KeyboardButton("ü§£ –ö–æ–º–µ–¥–∏—è")],
            [KeyboardButton("üëª –£–∂–∞—Å—ã"), KeyboardButton("üîô –ù–∞–∑–∞–¥")]
        ], resize_keyboard=True)
        context.user_data["waiting_for_genre"] = True  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ "–∂–¥—ë–º –∂–∞–Ω—Ä"
        await update.message.reply_text("–í—ã–±–µ—Ä–∏ –∂–∞–Ω—Ä —Ñ–∏–ª—å–º–∞ üéûÔ∏è:", reply_markup=genre_menu)

    # –û—Ç–≤–µ—Ç –Ω–∞ –∂–∞–Ω—Ä —Ñ–∏–ª—å–º–∞
    elif context.user_data.get("waiting_for_genre"):
        context.user_data["waiting_for_genre"] = False  # –°–Ω–∏–º–∞–µ–º —Ñ–ª–∞–≥
        if "–±–æ–µ–≤–∏–∫" in request:
            await update.message.reply_text("–ê—Ç–∞–∫–∞ —Ç–∏—Ç–∞–Ω–∏–∫–∞ üí•")
        elif "–∫–æ–º–µ–¥–∏—è" in request:
            await update.message.reply_text("–û–¥–∏–Ω –¥–æ–º–∞ ü§™")
        elif "—É–∂–∞—Å" in request:
            await update.message.reply_text("–ü–∏–ª–∞ ü™ö")
        else:
            await update.message.reply_text("–ß—ë—Ç –Ω–µ –ø–æ–Ω—è–ª –∂–∞–Ω—Ä ü§∑")
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
        await update.message.reply_text("–í–æ–∑–≤—Ä–∞—â–∞—é—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üîÑ", reply_markup=main_menu)

    # –ò–≥—Ä–∞ "–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ"
    elif "–∏–≥—Ä–∞" in request:
        num = randint(1, 100)  # –ó–∞–≥–∞–¥—ã–≤–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ
        context.user_data["game_number"] = num  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —á–∏—Å–ª–æ –≤ user_data
        context.user_data["game_tries"] = 5     # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–ª-–≤–æ –ø–æ–ø—ã—Ç–æ–∫
        await update.message.reply_text("üéØ –£–≥–∞–¥–∞–π —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100. –£ —Ç–µ–±—è 5 –ø–æ–ø—ã—Ç–æ–∫!")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–∏—Å–ª–∞ –≤–æ –≤—Ä–µ–º—è –∏–≥—Ä—ã
    elif "game_number" in context.user_data:
        try:
            guess = int(request)  # –ü—Ä–æ–±—É–µ–º –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –≤–≤–æ–¥ –≤ —á–∏—Å–ª–æ
        except ValueError:
            await update.message.reply_text("ü§ì –≠—Ç–æ –Ω–µ —á–∏—Å–ª–æ. –ü–æ–ø—Ä–æ–±—É–π –Ω–æ—Ä–º–∞–ª—å–Ω–æ.")
            return

        context.user_data["game_tries"] -= 1
        num = context.user_data["game_number"]

        if guess == num:
            context.user_data["wins"] += 1  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫ –ø–æ–±–µ–¥
            await update.message.reply_text(f"üéâ –ö—Ä–∞—Å–∞–≤—á–∏–∫! –¢—ã —É–≥–∞–¥–∞–ª! –ü–æ–±–µ–¥: {context.user_data['wins']}")
            context.user_data.pop("game_number")  # –£–±–∏—Ä–∞–µ–º —á–∏—Å–ª–æ ‚Äî –∏–≥—Ä–∞ –∑–∞–∫–æ–Ω—á–µ–Ω–∞
        elif context.user_data["game_tries"] == 0:
            await update.message.reply_text(f"üíÄ –ü—Ä–æ–∏–≥—Ä–∞–ª. –ë—ã–ª–æ —á–∏—Å–ª–æ: {num}")
            context.user_data.pop("game_number")
        else:
            # –ü–æ–¥—Å–∫–∞–∑–∫–∞ ‚Äî –±–æ–ª—å—à–µ –∏–ª–∏ –º–µ–Ω—å—à–µ
            hint = "üìâ –ú–µ–Ω—å—à–µ" if guess > num else "üìà –ë–æ–ª—å—à–µ"
            await update.message.reply_text(f"{hint}. –û—Å—Ç–∞–ª–æ—Å—å –ø–æ–ø—ã—Ç–æ–∫: {context.user_data['game_tries']}")

    # –ù–∞—á–∞—Ç—å –≤–∏–∫—Ç–æ—Ä–∏–Ω—É
    elif "–≤–∏–∫—Ç–æ—Ä–∏–Ω–∞" in request:
        markup = InlineKeyboardMarkup.from_row(quiz_answers)  # –°–æ–∑–¥–∞—ë–º inline-–∫–Ω–æ–ø–∫–∏
        await update.message.reply_text(quiz_question, reply_markup=markup)

    # –ú–µ–º-–∫–∞—Ä—Ç–∏–Ω–∫–∞
    elif "–º–µ–º" in request:
        await update.message.reply_photo(photo=meme_url, caption="–õ–æ–≤–∏ –º–µ–º! üòπ")

    # –ü—Ä–æ—â–∞–Ω–∏–µ
    elif "–ø–æ–∫–∞" in request:
        await update.message.reply_text("–ë—ã–≤–∞–π, –±—Ä–∞—Ç! –í–æ–∑–≤—Ä–∞—â–∞–π—Å—è üî•", reply_markup=main_menu)

    # –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    elif "–Ω–∞–∑–∞–¥" in request:
        await update.message.reply_text("üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", reply_markup=main_menu)

    # –ï—Å–ª–∏ –±–æ—Ç –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–Ω—è–ª
    else:
        await update.message.reply_text("‚ùì –ù–µ –ø–æ–Ω—è–ª. –ñ–º–∏ –∫–Ω–æ–ø–∫–∏ –≤–Ω–∏–∑—É ‚¨áÔ∏è")

# === –û–ë–†–ê–ë–û–¢–ö–ê –ö–ù–û–ü–û–ö –í–ò–ö–¢–û–†–ò–ù–´ ===
async def handle_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query  # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –∑–∞–ø—Ä–æ—Å–∞ (–Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏)
    await query.answer()  # –°–æ–æ–±—â–∞–µ–º Telegram, —á—Ç–æ –æ–±—Ä–∞–±–æ—Ç–∞–ª–∏ –Ω–∞–∂–∞—Ç–∏–µ

    if query.data == "quiz_right":
        await query.edit_message_text("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ! –¢—ã —É–º–Ω—ã–π üòé")
    elif query.data == "quiz_wrong":
        await query.edit_message_text("‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ! –ü–æ–ø—Ä–æ–±—É–π –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ ü§ì")

# === –ó–ê–ü–£–°–ö –ë–û–¢–ê ===

TOKEN = "YOUR_BOT_TOKEN"  # üëà –í–°–¢–ê–í–¨ –°–Æ–î–ê —Å–≤–æ–π —Ç–æ–∫–µ–Ω –æ—Ç BotFather

app = Application.builder().token(TOKEN).build()  # –°–æ–∑–¥–∞—ë–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
app.add_handler(CommandHandler("start", start))  # –ö–æ–º–∞–Ω–¥–∞ /start
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))  # –í—Å—ë, –∫—Ä–æ–º–µ –∫–æ–º–∞–Ω–¥
app.add_handler(CallbackQueryHandler(handle_callback))  # –û–±—Ä–∞–±–æ—Ç–∫–∞ inline-–∫–Ω–æ–ø–æ–∫

print("–ë–æ—Ç –û–õ–ï–ì –∑–∞–ø—É—â–µ–Ω üí•")  # –õ–æ–≥ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª
app.run_polling()  # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–ø—Ä–æ—Å —Å–µ—Ä–≤–µ—Ä–∞ Telegram (–±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª)
